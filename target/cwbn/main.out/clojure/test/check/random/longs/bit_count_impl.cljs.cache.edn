{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{bit-count}, :name clojure.test.check.random.longs.bit-count-impl, :imports nil, :requires nil, :cljs.spec/speced-vars [], :uses nil, :defs {lookup {:name clojure.test.check.random.longs.bit-count-impl/lookup, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\random\\longs\\bit_count_impl.cljs", :line 18, :column 1, :end-line 18, :end-column 22, :private true, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\random\\longs\\bit_count_impl.cljs", :line 18, :column 16, :end-line 18, :end-column 22, :private true}, :tag array}, bit-count {:protocol-inline nil, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\random\\longs\\bit_count_impl.cljs", :line 26, :column 7, :end-line 26, :end-column 16, :arglists (quote ([x])), :doc "Returns a JS number (not a Long), the number of set bits in the\n  given Long."}, :name clojure.test.check.random.longs.bit-count-impl/bit-count, :variadic false, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\random\\longs\\bit_count_impl.cljs", :end-column 16, :method-params ([x]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 26, :end-line 26, :max-fixed-arity 1, :fn-var true, :arglists (quote ([x])), :doc "Returns a JS number (not a Long), the number of set bits in the\n  given Long."}}, :cljs.spec/registry-ref [], :require-macros nil, :doc nil}