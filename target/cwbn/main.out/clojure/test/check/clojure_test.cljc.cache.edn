{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name clojure.test.check.clojure-test, :imports nil, :requires {ct cljs.test, cljs.test cljs.test, clojure.test.check.impl clojure.test.check.impl}, :cljs.spec/speced-vars [], :uses {exception-like? clojure.test.check.impl, get-current-time-millis clojure.test.check.impl}, :defs {report-trial {:protocol-inline nil, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 149, :column 7, :end-line 149, :end-column 19, :arglists (quote ([property-fun so-far num-tests]))}, :name clojure.test.check.clojure-test/report-trial, :variadic false, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :end-column 19, :method-params ([property-fun so-far num-tests]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 149, :end-line 149, :max-fixed-arity 3, :fn-var true, :arglists (quote ([property-fun so-far num-tests]))}, *default-test-count* {:name clojure.test.check.clojure-test/*default-test-count*, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 23, :column 1, :end-line 23, :end-column 36, :dynamic true, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 23, :column 16, :end-line 23, :end-column 36, :dynamic true}, :tag number}, *report-shrinking* {:meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 83, :column 16, :end-line 83, :end-column 34, :dynamic true}, :name clojure.test.check.clojure-test/*report-shrinking*, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :end-column 34, :column 1, :dynamic true, :line 83, :end-line 83, :tag boolean, :doc "If true, a verbose report of the property being tested, the\n  failing return value, and the arguments provoking that failure is emitted\n  prior to the start of the shrinking search."}, *report-trials* {:meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 65, :column 16, :end-line 65, :end-column 31, :dynamic true}, :name clojure.test.check.clojure-test/*report-trials*, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :end-column 31, :column 1, :dynamic true, :line 65, :end-line 65, :tag boolean, :doc "Controls whether property trials should be reported via clojure.test/report.\n  Valid values include:\n\n  * false - no reporting of trials (default)\n  * a function - will be passed a clojure.test/report-style map containing\n  :clojure.test.check/property and :clojure.test.check/trial slots\n  * true - provides quickcheck-style trial reporting (dots) via\n  `trial-report-dots`\n\n  (Note that all reporting requires running `quick-check` within the scope of a\n  clojure.test run (via `test-ns`, `test-all-vars`, etc.)\n\n  Reporting functions offered by clojure.test.check include `trial-report-dots` and\n  `trial-report-periodic` (which prints more verbose trial progress information\n  every `*trial-report-period*` milliseconds."}, trial-report-dots {:protocol-inline nil, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 125, :column 7, :end-line 125, :end-column 24, :arglists (quote ([{[so-far total] :clojure.test.check.clojure-test/trial}])), :doc "Intended to be bound as the value of `*report-trials*`; will emit a single\n  dot every 1000 trials reported."}, :name clojure.test.check.clojure-test/trial-report-dots, :variadic false, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :end-column 24, :method-params ([p__22688]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 125, :end-line 125, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{[so-far total] :clojure.test.check.clojure-test/trial}])), :doc "Intended to be bound as the value of `*report-trials*`; will emit a single\n  dot every 1000 trials reported."}, assert-check {:protocol-inline nil, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 16, :column 7, :end-line 16, :end-column 19, :arglists (quote ([{:keys [result], :as m}]))}, :name clojure.test.check.clojure-test/assert-check, :variadic false, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :end-column 19, :method-params ([p__22679]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 16, :end-line 16, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{:keys [result], :as m}]))}, with-test-out* {:protocol-inline nil, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 106, :column 7, :end-line 106, :end-column 21, :arglists (quote ([f]))}, :name clojure.test.check.clojure-test/with-test-out*, :variadic false, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :end-column 21, :method-params ([f]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 106, :end-line 106, :max-fixed-arity 1, :fn-var true, :arglists (quote ([f]))}, trial-report-periodic {:protocol-inline nil, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 110, :column 7, :end-line 110, :end-column 28, :arglists (quote ([m])), :doc "Intended to be bound as the value of `*report-trials*`; will emit a verbose\n  status every `*trial-report-period*` milliseconds, like this one:\n\n  Passing trial 3286 / 5000 for (your-test-var-name-here) (:)"}, :name clojure.test.check.clojure-test/trial-report-periodic, :variadic false, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :end-column 28, :method-params ([m]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 110, :end-line 110, :max-fixed-arity 1, :fn-var true, :arglists (quote ([m])), :doc "Intended to be bound as the value of `*report-trials*`; will emit a verbose\n  status every `*trial-report-period*` milliseconds, like this one:\n\n  Passing trial 3286 / 5000 for (your-test-var-name-here) (:)"}, get-property-name {:protocol-inline nil, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 102, :column 8, :end-line 102, :end-column 25, :private true, :arglists (quote ([{property-fun :clojure.test.check.clojure-test/property, :as report-map}]))}, :private true, :name clojure.test.check.clojure-test/get-property-name, :variadic false, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :end-column 25, :method-params ([p__22685]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 102, :end-line 102, :max-fixed-arity 1, :fn-var true, :arglists (quote ([{property-fun :clojure.test.check.clojure-test/property, :as report-map}]))}, *trial-report-period* {:meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 89, :column 16, :end-line 89, :end-column 37, :dynamic true}, :name clojure.test.check.clojure-test/*trial-report-period*, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :end-column 37, :column 1, :dynamic true, :line 89, :end-line 89, :tag number, :doc "Milliseconds between reports emitted by `trial-report-periodic`."}, process-options {:no-doc true, :protocol-inline nil, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 25, :column 7, :end-line 25, :end-column 22, :arglists (quote ([options])), :no-doc true}, :name clojure.test.check.clojure-test/process-options, :variadic false, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :end-column 22, :method-params ([options]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 25, :end-line 25, :max-fixed-arity 1, :fn-var true, :arglists (quote ([options]))}, last-trial-report {:name clojure.test.check.clojure-test/last-trial-report, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 93, :column 1, :end-line 93, :end-column 33, :private true, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 93, :column 16, :end-line 93, :end-column 33, :private true}, :tag any}, report-failure {:protocol-inline nil, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :line 155, :column 7, :end-line 155, :end-column 21, :arglists (quote ([property-fun result trial-number failing-params]))}, :name clojure.test.check.clojure-test/report-failure, :variadic false, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\a5o\\-9uliv9\\cwbn\\main.out\\clojure\\test\\check\\clojure_test.cljc", :end-column 21, :method-params ([property-fun result trial-number failing-params]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 155, :end-line 155, :max-fixed-arity 4, :fn-var true, :arglists (quote ([property-fun result trial-number failing-params]))}}, :cljs.spec/registry-ref [], :require-macros {ct cljs.test, cljs.test cljs.test}, :cljs.analyzer/constants {:seen #{:clojure.test.check.clojure-test/params :clojure.test.check.clojure-test/trial :begin-test-var :begin-test :else :name :num-tests :type :bad-options :fail :result :clojure.test.check.clojure-test/property :expected :cljs.test/default :clojure.test.check.clojure-test/shrinking :error :pass result :actual :message}, :order [:result :type :expected :actual :message :error result :pass :fail :num-tests :else :bad-options :cljs.test/default :begin-test-var :begin-test :clojure.test.check.clojure-test/property :name :clojure.test.check.clojure-test/trial :clojure.test.check.clojure-test/shrinking :clojure.test.check.clojure-test/params]}, :doc nil}