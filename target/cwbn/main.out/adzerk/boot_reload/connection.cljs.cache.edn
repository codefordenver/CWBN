{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name adzerk.boot-reload.connection, :imports nil, :requires {net clojure.browser.net, clojure.browser.net clojure.browser.net}, :cljs.spec/speced-vars [], :uses nil, :defs {ws-conn {:name adzerk.boot-reload.connection/ws-conn, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\lk\\-9uliv9\\cwbn\\main.out\\adzerk\\boot_reload\\connection.cljs", :line 5, :column 1, :end-line 5, :end-column 13, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\lk\\-9uliv9\\cwbn\\main.out\\adzerk\\boot_reload\\connection.cljs", :line 5, :column 6, :end-line 5, :end-column 13}, :tag any}, alive? {:protocol-inline nil, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\lk\\-9uliv9\\cwbn\\main.out\\adzerk\\boot_reload\\connection.cljs", :line 7, :column 7, :end-line 7, :end-column 13, :arglists (quote ([]))}, :name adzerk.boot-reload.connection/alive?, :variadic false, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\lk\\-9uliv9\\cwbn\\main.out\\adzerk\\boot_reload\\connection.cljs", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 7, :end-line 7, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, send-message! {:protocol-inline nil, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\lk\\-9uliv9\\cwbn\\main.out\\adzerk\\boot_reload\\connection.cljs", :line 9, :column 7, :end-line 9, :end-column 20, :arglists (quote ([message]))}, :name adzerk.boot-reload.connection/send-message!, :variadic false, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\lk\\-9uliv9\\cwbn\\main.out\\adzerk\\boot_reload\\connection.cljs", :end-column 20, :method-params ([message]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 9, :end-line 9, :max-fixed-arity 1, :fn-var true, :arglists (quote ([message]))}}, :cljs.spec/registry-ref [], :require-macros nil, :doc nil}