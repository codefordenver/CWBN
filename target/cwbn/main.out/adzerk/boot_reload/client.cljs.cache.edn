{:rename-macros {}, :renames {}, :externs {goog {provide {}, exportPath_ {}, global {CLOSURE_IMPORT_SCRIPT {}}, inHtmlDocument_ {}}, window {location {}}, console {warn {}, info {}, error {}}, Error {}}, :use-macros {}, :excludes #{}, :name adzerk.boot-reload.client, :imports {Uri goog.Uri}, :requires {adzerk.boot-reload.connection adzerk.boot-reload.connection, adzerk.boot-reload.reload adzerk.boot-reload.reload, Uri goog.Uri, adzerk.boot-reload.display adzerk.boot-reload.display, jsloader goog.net.jsloader, goog.net.jsloader goog.net.jsloader, ws adzerk.boot-reload.websocket, adzerk.boot-reload.websocket adzerk.boot-reload.websocket, rl adzerk.boot-reload.reload, net clojure.browser.net, clojure.browser.net clojure.browser.net, event clojure.browser.event, cljs.reader cljs.reader, reader cljs.reader, clojure.browser.event clojure.browser.event, d adzerk.boot-reload.display}, :cljs.spec/speced-vars [], :uses {alive? adzerk.boot-reload.connection, ws-conn adzerk.boot-reload.connection, send-message! adzerk.boot-reload.connection}, :defs {patch-goog-base! {:protocol-inline nil, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\5u0\\-9uliv9\\cwbn\\main.out\\adzerk\\boot_reload\\client.cljs", :line 15, :column 7, :end-line 15, :end-column 23, :arglists (quote ([]))}, :name adzerk.boot-reload.client/patch-goog-base!, :variadic false, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\5u0\\-9uliv9\\cwbn\\main.out\\adzerk\\boot_reload\\client.cljs", :end-column 23, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}, resolve-url {:protocol-inline nil, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\5u0\\-9uliv9\\cwbn\\main.out\\adzerk\\boot_reload\\client.cljs", :line 21, :column 7, :end-line 21, :end-column 18, :arglists (quote ([url ws-host]))}, :name adzerk.boot-reload.client/resolve-url, :variadic false, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\5u0\\-9uliv9\\cwbn\\main.out\\adzerk\\boot_reload\\client.cljs", :end-column 18, :method-params ([url ws-host]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 21, :end-line 21, :max-fixed-arity 2, :fn-var true, :arglists (quote ([url ws-host]))}, handle {:name adzerk.boot-reload.client/handle, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\5u0\\-9uliv9\\cwbn\\main.out\\adzerk\\boot_reload\\client.cljs", :line 35, :column 1, :end-line 35, :end-column 17, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\5u0\\-9uliv9\\cwbn\\main.out\\adzerk\\boot_reload\\client.cljs", :line 35, :column 11, :end-line 35, :end-column 17}, :tag cljs.core/MultiFn}, connect {:protocol-inline nil, :meta {:file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\5u0\\-9uliv9\\cwbn\\main.out\\adzerk\\boot_reload\\client.cljs", :line 46, :column 7, :end-line 46, :end-column 14, :arglists (quote ([url] [url opts])), :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([url] [url opts]), :arglists ([url] [url opts]), :arglists-meta (nil nil)}}, :name adzerk.boot-reload.client/connect, :variadic false, :file "C:\\Users\\KyuBok\\.boot\\cache\\tmp\\Projects\\cwbn-clj\\cwbn\\5u0\\-9uliv9\\cwbn\\main.out\\adzerk\\boot_reload\\client.cljs", :end-column 14, :top-fn {:variadic false, :max-fixed-arity 2, :method-params ([url] [url opts]), :arglists ([url] [url opts]), :arglists-meta (nil nil)}, :method-params ([url] [url opts]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 46, :end-line 46, :max-fixed-arity 2, :fn-var true, :arglists ([url] [url opts])}}, :cljs.spec/registry-ref [], :require-macros {reader cljs.reader, cljs.reader cljs.reader}, :cljs.analyzer/constants {:seen #{:closed :ws-host :else :default :type :opened :files :reload :error :visual :hierarchy :message}, :order [:else :hierarchy :type :default :reload :files :visual :opened :message :closed :error :ws-host]}, :doc nil}